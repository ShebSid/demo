/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.walmart.glitch.demo.myapi;

import com.walmart.glitch.demo.mymodel.ErrorResponse;
import com.walmart.glitch.demo.mymodel.LocationResponse;
import com.walmart.glitch.demo.mymodel.LocationSingleResponse;
import com.walmart.glitch.demo.mymodel.SuccessCenterManagedResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-12-17T23:35:14.636+05:30[Asia/Kolkata]")

@Validated
@Api(value = "{countryCode}", description = "the {countryCode} API")
public interface CountryCodeApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /{countryCode}/location : Fetches all stores information in a given country.
     * Fetch all stores information using country code.
     *
     * @param countryCode Standard country code. Example US &#x3D; USA, CA &#x3D; Canada (required)
     * @param WM_SVC_NAME Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments. (required)
     * @param WM_SVC_ENV Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.  (required)
     * @param WM_CONSUMER_ID Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id &#x3D; 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments.  (required)
     * @param WM_SEC_KEY_VERSION Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_CONSUMER_INTIMESTAMP Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_SEC_AUTH_SIGNATURE Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage &amp; prod environments as the signature authetication is in place. (required)
     * @param f Comma separated list of fields that will be returned in the response. For example: f&#x3D;locationNbr,name (optional)
     * @param offset Zero based index of number of records to skip from start. If not mentioned, it is considered zero. (optional)
     * @param page Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered. (optional)
     * @param pageNumber Zero based index of page to fetch. If offset is provided, that too will be considered. (optional)
     * @param pageSize Specifies number of records per page. (optional)
     * @param paged Pass &#39;true&#39; to request paged information. (optional)
     * @param size Specifies total/max number of records to fetch. (optional)
     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported. (optional, default to new ArrayList&lt;&gt;())
     * @param sortSorted If passed &#39;true&#39;, the sorting criteria mentioned in parameter &#39;sort&#39; is applied. (optional)
     * @param sortUnsorted  (optional)
     * @param unpaged  (optional)
     * @return Successfully returns Stores information for the given country code and search criteria like locationNbr, name, etc. (status code 200)
     *         or No Content is returned when there is no data for the given country code and search criteria like locationNbr, name, etc. (status code 204)
     *         or Bad Request is returned when one or many given criteria are of wrong data type or value. (status code 400)
     *         or Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception. (status code 500)
     */
    @ApiOperation(value = "Fetches all stores information in a given country.", nickname = "getAllLocationsUsingGET", notes = "Fetch all stores information using country code.", response = LocationResponse.class, tags={ "location-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully returns Stores information for the given country code and search criteria like locationNbr, name, etc.", response = LocationResponse.class),
        @ApiResponse(code = 204, message = "No Content is returned when there is no data for the given country code and search criteria like locationNbr, name, etc."),
        @ApiResponse(code = 400, message = "Bad Request is returned when one or many given criteria are of wrong data type or value.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception.", response = ErrorResponse.class) })
    @RequestMapping(value = "/{countryCode}/location",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<LocationResponse> getAllLocationsUsingGET(@ApiParam(value = "Standard country code. Example US = USA, CA = Canada",required=true) @PathVariable("countryCode") String countryCode,@ApiParam(value = "Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments." ,required=true) @RequestHeader(value="WM_SVC.NAME", required=true) String WM_SVC_NAME,@ApiParam(value = "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage. " ,required=true) @RequestHeader(value="WM_SVC.ENV", required=true) String WM_SVC_ENV,@ApiParam(value = "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments. " ,required=true) @RequestHeader(value="WM_CONSUMER.ID", required=true) String WM_CONSUMER_ID,@ApiParam(value = "Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_SEC.KEY_VERSION", required=true) Integer WM_SEC_KEY_VERSION,@ApiParam(value = "Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_CONSUMER.INTIMESTAMP", required=true) Integer WM_CONSUMER_INTIMESTAMP,@ApiParam(value = "Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage & prod environments as the signature authetication is in place." ,required=true) @RequestHeader(value="WM_SEC.AUTH_SIGNATURE", required=true) String WM_SEC_AUTH_SIGNATURE,@ApiParam(value = "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name") @Valid @RequestParam(value = "f", required = false) String f,@ApiParam(value = "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.") @Valid @RequestParam(value = "offset", required = false) Long offset,@ApiParam(value = "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.") @Valid @RequestParam(value = "page", required = false) Integer page,@ApiParam(value = "Zero based index of page to fetch. If offset is provided, that too will be considered.") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber,@ApiParam(value = "Specifies number of records per page.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Pass 'true' to request paged information.") @Valid @RequestParam(value = "paged", required = false) Boolean paged,@ApiParam(value = "Specifies total/max number of records to fetch.") @Valid @RequestParam(value = "size", required = false) Integer size,@ApiParam(value = "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.") @Valid @RequestParam(value = "sort", required = false) List<String> sort,@ApiParam(value = "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.") @Valid @RequestParam(value = "sort.sorted", required = false) Boolean sortSorted,@ApiParam(value = "") @Valid @RequestParam(value = "sort.unsorted", required = false) Boolean sortUnsorted,@ApiParam(value = "") @Valid @RequestParam(value = "unpaged", required = false) Boolean unpaged) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true, \"timestamp\" : \"2020-10-06 11:22:38\", \"data\" : [ { \"id\" : \"US1526\", \"locationNbr\" : 1526, \"name\" : \"STORM LAKE IA\", \"openDate\" : \"1990-04-02\", \"streetAddress\" : \"1831 LAKE AVE\", \"city\" : \"STORM LAKE\", \"stateProvinceCode\" : \"IA\", \"stateProvinceId\" : 15, \"stateProvince\" : \"IOWA\", \"postalCode\" : \"50588-7606\", \"country\" : \"US\", \"timeZoneId\" : \"America/Chicago\", \"timeZoneCode\" : \"CDT\", \"glnNumbers\" : [ \"0078742014937\" ], \"timeZoneDSTObservable\" : true, \"logisticalCountryCode\" : \"US\", \"type\" : \"Retail\", \"typeCode\" : 100001, \"statusCode\" : 5, \"status\" : \"OLD, MORE THAN 13 MONTHS SINCE RE-GRAND\", \"buID\" : 295634, \"tempStoreFlag\" : false, \"languageCode\" : 101, \"bannerCode\" : \"A1\", \"bannerDesc\" : \"WM Supercenter\", \"currencyCode\" : \"USD\", \"replenishmentTypeCode\" : \"U\", \"phoneNbr\" : \"7127327940\", \"baseDivisionCode\" : 1, \"homeStoreNbr\" : 1361, \"isSalesCompable\" : true, \"isOpenSunday\" : true, \"merchandiseMajorZoneNbr\" : 80, \"merchandiseSubZoneNbr\" : 85, \"expansionSize\" : 65930, \"grossSize\" : 157131, \"lastUpdatedUser\" : \"RDC_LOAD\", \"marketName\" : \"RETAIL MARKET 426\", \"regionName\" : \"NE/ IA/ NE KS\", \"latitude\" : 42.663322, \"longitude\" : -95.197507, \"formatDescription\" : \"Hypermarket\", \"divisions\" : [ { \"divisionNbr\" : 6, \"divisionDesc\" : \"AUTO CARE CENTER\", \"typeCode\" : 1, \"type\" : \"INCOME DIVISION\", \"openDate\" : \"2002-09-11\", \"statusCode\" : 1, \"regionCode\" : 51, \"subRegionCode\" : 17, \"marketCode\" : 426, \"baseDivisionCode\" : 1, \"subDivisionCode\" : \"M\", \"subDivisionName\" : \"WEST BU\", \"businessUnitOrgAreaCode\" : 3, \"lastUpdatedTimestamp\" : \"2020-06-03\", \"lastUpdatedUser\" : \"HRM DATA\", \"storeCode3\" : \"C\", \"companyCode\" : \"WMW\", \"taxReportCode\" : 110, \"reportCode\" : \"SC\", \"deleteCode\" : \"A\", \"shrinkPctCost\" : 0, \"shrinkRetailPct\" : 0, \"departments\" : [ { \"departmentNbr\" : 10, \"departmentDesc\" : \"AUTOMOTIVE TEST\" } ] } ], \"associates\" : [ { \"firstName\" : \"JOSEPH\", \"lastName\" : \" CLAREY\", \"role\" : \"MGMT-STORE MANAGER\", \"email\" : \"J0C04I9.S01526.US@WAL-MART.COM\", \"fullName\" : \"JOSEPH CLAREY\" } ], \"mainWarehouse\" : 6009, \"lastUpdatedDate\" : \"2020-10-01\", \"lastUpdatedTimestamp\" : \"2020-09-29\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /{countryCode}/location/glnNumber/{glnNumber} : Fetches the store information in a country for given GIN number.
     * Fetch store information using country code and GLN number.
     *
     * @param countryCode Standard country code. Example US &#x3D; USA, CA &#x3D; Canada (required)
     * @param glnNumber GIN number (required)
     * @param WM_SVC_NAME Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments. (required)
     * @param WM_SVC_ENV Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.  (required)
     * @param WM_CONSUMER_ID Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id &#x3D; 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments.  (required)
     * @param WM_SEC_KEY_VERSION Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_CONSUMER_INTIMESTAMP Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_SEC_AUTH_SIGNATURE Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage &amp; prod environments as the signature authetication is in place. (required)
     * @param f Optional. Comma separated list of fields that will be returned in the response. For example: f&#x3D;locationNbr,name (optional)
     * @return Successfully returns Stores information for the given country code and GLN number. (status code 200)
     *         or No Content is returned when there is no data for the given country code and GLN number. (status code 204)
     *         or Bad Request is returned when one or many given criteria are of wrong data type or value. (status code 400)
     *         or Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception. (status code 500)
     */
    @ApiOperation(value = "Fetches the store information in a country for given GIN number.", nickname = "getLocationByGLNNumberUsingGET", notes = "Fetch store information using country code and GLN number.", response = LocationSingleResponse.class, tags={ "location-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully returns Stores information for the given country code and GLN number.", response = LocationSingleResponse.class),
        @ApiResponse(code = 204, message = "No Content is returned when there is no data for the given country code and GLN number."),
        @ApiResponse(code = 400, message = "Bad Request is returned when one or many given criteria are of wrong data type or value.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception.", response = ErrorResponse.class) })
    @RequestMapping(value = "/{countryCode}/location/glnNumber/{glnNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<LocationSingleResponse> getLocationByGLNNumberUsingGET(@ApiParam(value = "Standard country code. Example US = USA, CA = Canada",required=true) @PathVariable("countryCode") String countryCode,@ApiParam(value = "GIN number",required=true) @PathVariable("glnNumber") String glnNumber,@ApiParam(value = "Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments." ,required=true) @RequestHeader(value="WM_SVC.NAME", required=true) String WM_SVC_NAME,@ApiParam(value = "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage. " ,required=true) @RequestHeader(value="WM_SVC.ENV", required=true) String WM_SVC_ENV,@ApiParam(value = "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments. " ,required=true) @RequestHeader(value="WM_CONSUMER.ID", required=true) String WM_CONSUMER_ID,@ApiParam(value = "Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_SEC.KEY_VERSION", required=true) Integer WM_SEC_KEY_VERSION,@ApiParam(value = "Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_CONSUMER.INTIMESTAMP", required=true) Integer WM_CONSUMER_INTIMESTAMP,@ApiParam(value = "Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage & prod environments as the signature authetication is in place." ,required=true) @RequestHeader(value="WM_SEC.AUTH_SIGNATURE", required=true) String WM_SEC_AUTH_SIGNATURE,@ApiParam(value = "Optional. Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name") @Valid @RequestParam(value = "f", required = false) String f) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true, \"timestamp\" : \"2020-10-06 12:53:24\", \"data\" : { \"id\" : \"US1526\", \"locationNbr\" : 1526, \"name\" : \"STORM LAKE IA\", \"openDate\" : \"1990-04-02\", \"streetAddress\" : \"1831 LAKE AVE\", \"city\" : \"STORM LAKE\", \"stateProvinceCode\" : \"IA\", \"stateProvinceId\" : 15, \"stateProvince\" : \"IOWA\", \"postalCode\" : \"50588-7606\", \"country\" : \"US\", \"timeZoneId\" : \"America/Chicago\", \"timeZoneCode\" : \"CDT\", \"glnNumbers\" : [ \"0078742014937\" ], \"timeZoneDSTObservable\" : true, \"logisticalCountryCode\" : \"US\", \"type\" : \"Retail\", \"typeCode\" : 100001, \"statusCode\" : 5, \"status\" : \"OLD, MORE THAN 13 MONTHS SINCE RE-GRAND\", \"buID\" : 295634, \"tempStoreFlag\" : false, \"languageCode\" : 101, \"bannerCode\" : \"A1\", \"bannerDesc\" : \"WM Supercenter\", \"currencyCode\" : \"USD\", \"replenishmentTypeCode\" : \"U\", \"phoneNbr\" : \"7127327940\", \"baseDivisionCode\" : 1, \"homeStoreNbr\" : 1361, \"isSalesCompable\" : true, \"isOpenSunday\" : true, \"merchandiseMajorZoneNbr\" : 80, \"merchandiseSubZoneNbr\" : 85, \"expansionSize\" : 65930, \"grossSize\" : 157131, \"lastUpdatedUser\" : \"RDC_LOAD\", \"marketName\" : \"RETAIL MARKET 426\", \"regionName\" : \"NE/ IA/ NE KS\", \"latitude\" : 42.663322, \"longitude\" : -95.197507, \"formatDescription\" : \"Hypermarket\", \"divisions\" : [ { \"divisionNbr\" : 6, \"divisionDesc\" : \"AUTO CARE CENTER\", \"typeCode\" : 1, \"type\" : \"INCOME DIVISION\", \"openDate\" : \"2002-09-11\", \"statusCode\" : 1, \"regionCode\" : 51, \"subRegionCode\" : 17, \"marketCode\" : 426, \"baseDivisionCode\" : 1, \"subDivisionCode\" : \"M\", \"subDivisionName\" : \"WEST BU\", \"businessUnitOrgAreaCode\" : 3, \"lastUpdatedTimestamp\" : \"2020-06-03\", \"lastUpdatedUser\" : \"HRM DATA\", \"storeCode3\" : \"C\", \"companyCode\" : \"WMW\", \"taxReportCode\" : 110, \"reportCode\" : \"SC\", \"deleteCode\" : \"A\", \"shrinkPctCost\" : 0, \"shrinkRetailPct\" : 0, \"departments\" : [ { \"departmentNbr\" : 10, \"departmentDesc\" : \"AUTOMOTIVE TEST\" } ] } ], \"associates\" : [ { \"firstName\" : \"JOSEPH\", \"lastName\" : \" CLAREY\", \"role\" : \"MGMT-STORE MANAGER\", \"email\" : \"J0C04I9.S01526.US@WAL-MART.COM\", \"fullName\" : \"JOSEPH CLAREY\" } ], \"mainWarehouse\" : 6009, \"lastUpdatedDate\" : \"2020-10-01\", \"lastUpdatedTimestamp\" : \"2020-09-29\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /{countryCode}/location/locationNumber/{locationNumber} : Fetches a particular store information in a country.
     * Fetches a particular store information based on country code and location number.
     *
     * @param countryCode Standard country code. Example US &#x3D; USA, CA &#x3D; Canada (required)
     * @param locationNumber Unique location number (required)
     * @param WM_SVC_NAME Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments. (required)
     * @param WM_SVC_ENV Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.  (required)
     * @param WM_CONSUMER_ID Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id &#x3D; 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments.  (required)
     * @param WM_SEC_KEY_VERSION Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_CONSUMER_INTIMESTAMP Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_SEC_AUTH_SIGNATURE Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage &amp; prod environments as the signature authetication is in place. (required)
     * @param f Optional. Comma separated list of fields that will be returned in the response. For example: f&#x3D;locationNbr,name (optional)
     * @return Successfully returns Stores information for the given country code and location number. (status code 200)
     *         or No Content is returned when there is no data for the given country code and location number. (status code 204)
     *         or Bad Request is returned when one or many given criteria are of wrong data type or value. (status code 400)
     *         or Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception. (status code 500)
     */
    @ApiOperation(value = "Fetches a particular store information in a country.", nickname = "getLocationByNumberUsingGET", notes = "Fetches a particular store information based on country code and location number.", response = LocationSingleResponse.class, tags={ "location-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully returns Stores information for the given country code and location number.", response = LocationSingleResponse.class),
        @ApiResponse(code = 204, message = "No Content is returned when there is no data for the given country code and location number."),
        @ApiResponse(code = 400, message = "Bad Request is returned when one or many given criteria are of wrong data type or value.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception.", response = ErrorResponse.class) })
    @RequestMapping(value = "/{countryCode}/location/locationNumber/{locationNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<LocationSingleResponse> getLocationByNumberUsingGET(@ApiParam(value = "Standard country code. Example US = USA, CA = Canada",required=true) @PathVariable("countryCode") String countryCode,@ApiParam(value = "Unique location number",required=true) @PathVariable("locationNumber") Integer locationNumber,@ApiParam(value = "Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments." ,required=true) @RequestHeader(value="WM_SVC.NAME", required=true) String WM_SVC_NAME,@ApiParam(value = "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage. " ,required=true) @RequestHeader(value="WM_SVC.ENV", required=true) String WM_SVC_ENV,@ApiParam(value = "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments. " ,required=true) @RequestHeader(value="WM_CONSUMER.ID", required=true) String WM_CONSUMER_ID,@ApiParam(value = "Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_SEC.KEY_VERSION", required=true) Integer WM_SEC_KEY_VERSION,@ApiParam(value = "Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_CONSUMER.INTIMESTAMP", required=true) Integer WM_CONSUMER_INTIMESTAMP,@ApiParam(value = "Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage & prod environments as the signature authetication is in place." ,required=true) @RequestHeader(value="WM_SEC.AUTH_SIGNATURE", required=true) String WM_SEC_AUTH_SIGNATURE,@ApiParam(value = "Optional. Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name") @Valid @RequestParam(value = "f", required = false) String f) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true, \"timestamp\" : \"2020-10-06 12:53:24\", \"data\" : { \"id\" : \"US1526\", \"locationNbr\" : 1526, \"name\" : \"STORM LAKE IA\", \"openDate\" : \"1990-04-02\", \"streetAddress\" : \"1831 LAKE AVE\", \"city\" : \"STORM LAKE\", \"stateProvinceCode\" : \"IA\", \"stateProvinceId\" : 15, \"stateProvince\" : \"IOWA\", \"postalCode\" : \"50588-7606\", \"country\" : \"US\", \"timeZoneId\" : \"America/Chicago\", \"timeZoneCode\" : \"CDT\", \"glnNumbers\" : [ \"0078742014937\" ], \"timeZoneDSTObservable\" : true, \"logisticalCountryCode\" : \"US\", \"type\" : \"Retail\", \"typeCode\" : 100001, \"statusCode\" : 5, \"status\" : \"OLD, MORE THAN 13 MONTHS SINCE RE-GRAND\", \"buID\" : 295634, \"tempStoreFlag\" : false, \"languageCode\" : 101, \"bannerCode\" : \"A1\", \"bannerDesc\" : \"WM Supercenter\", \"currencyCode\" : \"USD\", \"replenishmentTypeCode\" : \"U\", \"phoneNbr\" : \"7127327940\", \"baseDivisionCode\" : 1, \"homeStoreNbr\" : 1361, \"isSalesCompable\" : true, \"isOpenSunday\" : true, \"merchandiseMajorZoneNbr\" : 80, \"merchandiseSubZoneNbr\" : 85, \"expansionSize\" : 65930, \"grossSize\" : 157131, \"lastUpdatedUser\" : \"RDC_LOAD\", \"marketName\" : \"RETAIL MARKET 426\", \"regionName\" : \"NE/ IA/ NE KS\", \"latitude\" : 42.663322, \"longitude\" : -95.197507, \"formatDescription\" : \"Hypermarket\", \"divisions\" : [ { \"divisionNbr\" : 6, \"divisionDesc\" : \"AUTO CARE CENTER\", \"typeCode\" : 1, \"type\" : \"INCOME DIVISION\", \"openDate\" : \"2002-09-11\", \"statusCode\" : 1, \"regionCode\" : 51, \"subRegionCode\" : 17, \"marketCode\" : 426, \"baseDivisionCode\" : 1, \"subDivisionCode\" : \"M\", \"subDivisionName\" : \"WEST BU\", \"businessUnitOrgAreaCode\" : 3, \"lastUpdatedTimestamp\" : \"2020-06-03\", \"lastUpdatedUser\" : \"HRM DATA\", \"storeCode3\" : \"C\", \"companyCode\" : \"WMW\", \"taxReportCode\" : 110, \"reportCode\" : \"SC\", \"deleteCode\" : \"A\", \"shrinkPctCost\" : 0, \"shrinkRetailPct\" : 0, \"departments\" : [ { \"departmentNbr\" : 10, \"departmentDesc\" : \"AUTOMOTIVE TEST\" } ] } ], \"associates\" : [ { \"firstName\" : \"JOSEPH\", \"lastName\" : \" CLAREY\", \"role\" : \"MGMT-STORE MANAGER\", \"email\" : \"J0C04I9.S01526.US@WAL-MART.COM\", \"fullName\" : \"JOSEPH CLAREY\" } ], \"mainWarehouse\" : 6009, \"lastUpdatedDate\" : \"2020-10-01\", \"lastUpdatedTimestamp\" : \"2020-09-29\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /{countryCode}/location/centerManaged : Fetches all stores information for a given country for centre Managed
     * Fetch all stores information using country code and Centre Managed flag
     *
     * @param countryCode Standard country code. Example US &#x3D; USA, CA &#x3D; Canada (required)
     * @param WM_SVC_NAME Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments. (required)
     * @param WM_SVC_ENV Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.  (required)
     * @param WM_CONSUMER_ID Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id &#x3D; 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments.  (required)
     * @param WM_SEC_KEY_VERSION Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_CONSUMER_INTIMESTAMP Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_SEC_AUTH_SIGNATURE Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage &amp; prod environments as the signature authetication is in place. (required)
     * @param flag Flag to indicate whether it is Centre Managed or not. 0 for No and 1 for Yes (optional)
     * @return Successfully returns Stores information for the given country code and Centre Managed flag. (status code 200)
     *         or No Content is returned when there is no data for the given country code and Centre Managed flag. (status code 204)
     *         or Bad Request is returned when one or many given criteria are of wrong data type or value. (status code 400)
     *         or Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception. (status code 500)
     */
    @ApiOperation(value = "Fetches all stores information for a given country for centre Managed", nickname = "getLocationNumberByCenterManaged", notes = "Fetch all stores information using country code and Centre Managed flag", response = SuccessCenterManagedResponse.class, tags={ "location-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully returns Stores information for the given country code and Centre Managed flag.", response = SuccessCenterManagedResponse.class),
        @ApiResponse(code = 204, message = "No Content is returned when there is no data for the given country code and Centre Managed flag."),
        @ApiResponse(code = 400, message = "Bad Request is returned when one or many given criteria are of wrong data type or value.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception.", response = ErrorResponse.class) })
    @RequestMapping(value = "/{countryCode}/location/centerManaged",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<SuccessCenterManagedResponse> getLocationNumberByCenterManaged(@ApiParam(value = "Standard country code. Example US = USA, CA = Canada",required=true) @PathVariable("countryCode") String countryCode,@ApiParam(value = "Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments." ,required=true) @RequestHeader(value="WM_SVC.NAME", required=true) String WM_SVC_NAME,@ApiParam(value = "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage. " ,required=true) @RequestHeader(value="WM_SVC.ENV", required=true) String WM_SVC_ENV,@ApiParam(value = "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments. " ,required=true) @RequestHeader(value="WM_CONSUMER.ID", required=true) String WM_CONSUMER_ID,@ApiParam(value = "Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_SEC.KEY_VERSION", required=true) Integer WM_SEC_KEY_VERSION,@ApiParam(value = "Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_CONSUMER.INTIMESTAMP", required=true) Integer WM_CONSUMER_INTIMESTAMP,@ApiParam(value = "Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage & prod environments as the signature authetication is in place." ,required=true) @RequestHeader(value="WM_SEC.AUTH_SIGNATURE", required=true) String WM_SEC_AUTH_SIGNATURE,@ApiParam(value = "Flag to indicate whether it is Centre Managed or not. 0 for No and 1 for Yes") @Valid @RequestParam(value = "flag", required = false) Integer flag) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true, \"timestamp\" : \"2020-10-06 12:31:44\", \"data\" : { \"totalStores\" : 1120, \"storeNumberList\" : [ 1175 ] } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /{countryCode}/location/departmentNumber/{departmentNumber} : Fetches all stores information for a given country and department.
     * Fetch all stores information using country code and department number.
     *
     * @param countryCode Standard country code. Example US &#x3D; USA, CA &#x3D; Canada (required)
     * @param departmentNumber Department number. (required)
     * @param WM_SVC_NAME Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments. (required)
     * @param WM_SVC_ENV Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.  (required)
     * @param WM_CONSUMER_ID Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id &#x3D; 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments.  (required)
     * @param WM_SEC_KEY_VERSION Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_CONSUMER_INTIMESTAMP Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_SEC_AUTH_SIGNATURE Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage &amp; prod environments as the signature authetication is in place. (required)
     * @param f Comma separated list of fields that will be returned in the response. For example: f&#x3D;locationNbr,name (optional)
     * @param offset Zero based index of number of records to skip from start. If not mentioned, it is considered zero. (optional)
     * @param page Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered. (optional)
     * @param pageNumber Zero based index of page to fetch. If offset is provided, that too will be considered. (optional)
     * @param pageSize Specifies number of records per page. (optional)
     * @param paged Pass &#39;true&#39; to request paged information. (optional)
     * @param size Specifies total/max number of records to fetch. (optional)
     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported. (optional, default to new ArrayList&lt;&gt;())
     * @param sortSorted If passed &#39;true&#39;, the sorting criteria mentioned in parameter &#39;sort&#39; is applied. (optional)
     * @param sortUnsorted  (optional)
     * @param unpaged  (optional)
     * @return Successfully returns Stores information for the given country code and department number. (status code 200)
     *         or No Content is returned when there is no data for the given country code and department number. (status code 204)
     *         or Bad Request is returned when one or many given criteria are of wrong data type or value. (status code 400)
     *         or Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception. (status code 500)
     */
    @ApiOperation(value = "Fetches all stores information for a given country and department.", nickname = "getLocationsByDepartmentNumberUsingGET", notes = "Fetch all stores information using country code and department number.", response = LocationResponse.class, tags={ "location-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully returns Stores information for the given country code and department number.", response = LocationResponse.class),
        @ApiResponse(code = 204, message = "No Content is returned when there is no data for the given country code and department number."),
        @ApiResponse(code = 400, message = "Bad Request is returned when one or many given criteria are of wrong data type or value.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception.", response = ErrorResponse.class) })
    @RequestMapping(value = "/{countryCode}/location/departmentNumber/{departmentNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<LocationResponse> getLocationsByDepartmentNumberUsingGET(@ApiParam(value = "Standard country code. Example US = USA, CA = Canada",required=true) @PathVariable("countryCode") String countryCode,@ApiParam(value = "Department number.",required=true) @PathVariable("departmentNumber") Integer departmentNumber,@ApiParam(value = "Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments." ,required=true) @RequestHeader(value="WM_SVC.NAME", required=true) String WM_SVC_NAME,@ApiParam(value = "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage. " ,required=true) @RequestHeader(value="WM_SVC.ENV", required=true) String WM_SVC_ENV,@ApiParam(value = "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments. " ,required=true) @RequestHeader(value="WM_CONSUMER.ID", required=true) String WM_CONSUMER_ID,@ApiParam(value = "Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_SEC.KEY_VERSION", required=true) Integer WM_SEC_KEY_VERSION,@ApiParam(value = "Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_CONSUMER.INTIMESTAMP", required=true) Integer WM_CONSUMER_INTIMESTAMP,@ApiParam(value = "Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage & prod environments as the signature authetication is in place." ,required=true) @RequestHeader(value="WM_SEC.AUTH_SIGNATURE", required=true) String WM_SEC_AUTH_SIGNATURE,@ApiParam(value = "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name") @Valid @RequestParam(value = "f", required = false) String f,@ApiParam(value = "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.") @Valid @RequestParam(value = "offset", required = false) Long offset,@ApiParam(value = "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.") @Valid @RequestParam(value = "page", required = false) Integer page,@ApiParam(value = "Zero based index of page to fetch. If offset is provided, that too will be considered.") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber,@ApiParam(value = "Specifies number of records per page.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Pass 'true' to request paged information.") @Valid @RequestParam(value = "paged", required = false) Boolean paged,@ApiParam(value = "Specifies total/max number of records to fetch.") @Valid @RequestParam(value = "size", required = false) Integer size,@ApiParam(value = "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.") @Valid @RequestParam(value = "sort", required = false) List<String> sort,@ApiParam(value = "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.") @Valid @RequestParam(value = "sort.sorted", required = false) Boolean sortSorted,@ApiParam(value = "") @Valid @RequestParam(value = "sort.unsorted", required = false) Boolean sortUnsorted,@ApiParam(value = "") @Valid @RequestParam(value = "unpaged", required = false) Boolean unpaged) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true, \"timestamp\" : \"2020-10-06 11:22:38\", \"data\" : [ { \"id\" : \"US1526\", \"locationNbr\" : 1526, \"name\" : \"STORM LAKE IA\", \"openDate\" : \"1990-04-02\", \"streetAddress\" : \"1831 LAKE AVE\", \"city\" : \"STORM LAKE\", \"stateProvinceCode\" : \"IA\", \"stateProvinceId\" : 15, \"stateProvince\" : \"IOWA\", \"postalCode\" : \"50588-7606\", \"country\" : \"US\", \"timeZoneId\" : \"America/Chicago\", \"timeZoneCode\" : \"CDT\", \"glnNumbers\" : [ \"0078742014937\" ], \"timeZoneDSTObservable\" : true, \"logisticalCountryCode\" : \"US\", \"type\" : \"Retail\", \"typeCode\" : 100001, \"statusCode\" : 5, \"status\" : \"OLD, MORE THAN 13 MONTHS SINCE RE-GRAND\", \"buID\" : 295634, \"tempStoreFlag\" : false, \"languageCode\" : 101, \"bannerCode\" : \"A1\", \"bannerDesc\" : \"WM Supercenter\", \"currencyCode\" : \"USD\", \"replenishmentTypeCode\" : \"U\", \"phoneNbr\" : \"7127327940\", \"baseDivisionCode\" : 1, \"homeStoreNbr\" : 1361, \"isSalesCompable\" : true, \"isOpenSunday\" : true, \"merchandiseMajorZoneNbr\" : 80, \"merchandiseSubZoneNbr\" : 85, \"expansionSize\" : 65930, \"grossSize\" : 157131, \"lastUpdatedUser\" : \"RDC_LOAD\", \"marketName\" : \"RETAIL MARKET 426\", \"regionName\" : \"NE/ IA/ NE KS\", \"latitude\" : 42.663322, \"longitude\" : -95.197507, \"formatDescription\" : \"Hypermarket\", \"divisions\" : [ { \"divisionNbr\" : 6, \"divisionDesc\" : \"AUTO CARE CENTER\", \"typeCode\" : 1, \"type\" : \"INCOME DIVISION\", \"openDate\" : \"2002-09-11\", \"statusCode\" : 1, \"regionCode\" : 51, \"subRegionCode\" : 17, \"marketCode\" : 426, \"baseDivisionCode\" : 1, \"subDivisionCode\" : \"M\", \"subDivisionName\" : \"WEST BU\", \"businessUnitOrgAreaCode\" : 3, \"lastUpdatedTimestamp\" : \"2020-06-03\", \"lastUpdatedUser\" : \"HRM DATA\", \"storeCode3\" : \"C\", \"companyCode\" : \"WMW\", \"taxReportCode\" : 110, \"reportCode\" : \"SC\", \"deleteCode\" : \"A\", \"shrinkPctCost\" : 0, \"shrinkRetailPct\" : 0, \"departments\" : [ { \"departmentNbr\" : 10, \"departmentDesc\" : \"AUTOMOTIVE TEST\" } ] } ], \"associates\" : [ { \"firstName\" : \"JOSEPH\", \"lastName\" : \" CLAREY\", \"role\" : \"MGMT-STORE MANAGER\", \"email\" : \"J0C04I9.S01526.US@WAL-MART.COM\", \"fullName\" : \"JOSEPH CLAREY\" } ], \"mainWarehouse\" : 6009, \"lastUpdatedDate\" : \"2020-10-01\", \"lastUpdatedTimestamp\" : \"2020-09-29\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /{countryCode}/location/divisionNumber/{divisionNumber} : Gets all stores information for given country and division
     * Fetch all stores information using given country code and division number.
     *
     * @param countryCode Standard country code. Example US &#x3D; USA, CA &#x3D; Canada (required)
     * @param divisionNumber Division number (required)
     * @param WM_SVC_NAME Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments. (required)
     * @param WM_SVC_ENV Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.  (required)
     * @param WM_CONSUMER_ID Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id &#x3D; 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments.  (required)
     * @param WM_SEC_KEY_VERSION Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_CONSUMER_INTIMESTAMP Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_SEC_AUTH_SIGNATURE Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage &amp; prod environments as the signature authetication is in place. (required)
     * @param bannerCode bannerCode (optional)
     * @param f Comma separated list of fields that will be returned in the response. For example: f&#x3D;locationNbr,name (optional)
     * @param languageCode languageCode (optional)
     * @param offset Zero based index of number of records to skip from start. If not mentioned, it is considered zero. (optional)
     * @param page Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered. (optional)
     * @param pageNumber Zero based index of page to fetch. If offset is provided, that too will be considered. (optional)
     * @param pageSize Specifies number of records per page. (optional)
     * @param paged Pass &#39;true&#39; to request paged information. (optional)
     * @param size Specifies total/max number of records to fetch. (optional)
     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported. (optional, default to new ArrayList&lt;&gt;())
     * @param sortSorted If passed &#39;true&#39;, the sorting criteria mentioned in parameter &#39;sort&#39; is applied. (optional)
     * @param sortUnsorted  (optional)
     * @param unpaged  (optional)
     * @return Successfully returns Stores information for the given country code and division number. (status code 200)
     *         or No Content is returned when there is no data for the given country code and division number. (status code 204)
     *         or Bad Request is returned when one or many given criteria are of wrong data type or value. (status code 400)
     *         or Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception. (status code 500)
     */
    @ApiOperation(value = "Gets all stores information for given country and division", nickname = "getLocationsByDivisionNumberUsingGET", notes = "Fetch all stores information using given country code and division number.", response = LocationResponse.class, tags={ "location-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully returns Stores information for the given country code and division number.", response = LocationResponse.class),
        @ApiResponse(code = 204, message = "No Content is returned when there is no data for the given country code and division number."),
        @ApiResponse(code = 400, message = "Bad Request is returned when one or many given criteria are of wrong data type or value.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception.", response = ErrorResponse.class) })
    @RequestMapping(value = "/{countryCode}/location/divisionNumber/{divisionNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<LocationResponse> getLocationsByDivisionNumberUsingGET(@ApiParam(value = "Standard country code. Example US = USA, CA = Canada",required=true) @PathVariable("countryCode") String countryCode,@ApiParam(value = "Division number",required=true) @PathVariable("divisionNumber") Integer divisionNumber,@ApiParam(value = "Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments." ,required=true) @RequestHeader(value="WM_SVC.NAME", required=true) String WM_SVC_NAME,@ApiParam(value = "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage. " ,required=true) @RequestHeader(value="WM_SVC.ENV", required=true) String WM_SVC_ENV,@ApiParam(value = "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments. " ,required=true) @RequestHeader(value="WM_CONSUMER.ID", required=true) String WM_CONSUMER_ID,@ApiParam(value = "Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_SEC.KEY_VERSION", required=true) Integer WM_SEC_KEY_VERSION,@ApiParam(value = "Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_CONSUMER.INTIMESTAMP", required=true) Integer WM_CONSUMER_INTIMESTAMP,@ApiParam(value = "Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage & prod environments as the signature authetication is in place." ,required=true) @RequestHeader(value="WM_SEC.AUTH_SIGNATURE", required=true) String WM_SEC_AUTH_SIGNATURE,@ApiParam(value = "bannerCode") @Valid @RequestParam(value = "bannerCode", required = false) String bannerCode,@ApiParam(value = "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name") @Valid @RequestParam(value = "f", required = false) String f,@ApiParam(value = "languageCode") @Valid @RequestParam(value = "languageCode", required = false) Integer languageCode,@ApiParam(value = "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.") @Valid @RequestParam(value = "offset", required = false) Long offset,@ApiParam(value = "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.") @Valid @RequestParam(value = "page", required = false) Integer page,@ApiParam(value = "Zero based index of page to fetch. If offset is provided, that too will be considered.") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber,@ApiParam(value = "Specifies number of records per page.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Pass 'true' to request paged information.") @Valid @RequestParam(value = "paged", required = false) Boolean paged,@ApiParam(value = "Specifies total/max number of records to fetch.") @Valid @RequestParam(value = "size", required = false) Integer size,@ApiParam(value = "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.") @Valid @RequestParam(value = "sort", required = false) List<String> sort,@ApiParam(value = "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.") @Valid @RequestParam(value = "sort.sorted", required = false) Boolean sortSorted,@ApiParam(value = "") @Valid @RequestParam(value = "sort.unsorted", required = false) Boolean sortUnsorted,@ApiParam(value = "") @Valid @RequestParam(value = "unpaged", required = false) Boolean unpaged) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true, \"timestamp\" : \"2020-10-06 11:22:38\", \"data\" : [ { \"id\" : \"US1526\", \"locationNbr\" : 1526, \"name\" : \"STORM LAKE IA\", \"openDate\" : \"1990-04-02\", \"streetAddress\" : \"1831 LAKE AVE\", \"city\" : \"STORM LAKE\", \"stateProvinceCode\" : \"IA\", \"stateProvinceId\" : 15, \"stateProvince\" : \"IOWA\", \"postalCode\" : \"50588-7606\", \"country\" : \"US\", \"timeZoneId\" : \"America/Chicago\", \"timeZoneCode\" : \"CDT\", \"glnNumbers\" : [ \"0078742014937\" ], \"timeZoneDSTObservable\" : true, \"logisticalCountryCode\" : \"US\", \"type\" : \"Retail\", \"typeCode\" : 100001, \"statusCode\" : 5, \"status\" : \"OLD, MORE THAN 13 MONTHS SINCE RE-GRAND\", \"buID\" : 295634, \"tempStoreFlag\" : false, \"languageCode\" : 101, \"bannerCode\" : \"A1\", \"bannerDesc\" : \"WM Supercenter\", \"currencyCode\" : \"USD\", \"replenishmentTypeCode\" : \"U\", \"phoneNbr\" : \"7127327940\", \"baseDivisionCode\" : 1, \"homeStoreNbr\" : 1361, \"isSalesCompable\" : true, \"isOpenSunday\" : true, \"merchandiseMajorZoneNbr\" : 80, \"merchandiseSubZoneNbr\" : 85, \"expansionSize\" : 65930, \"grossSize\" : 157131, \"lastUpdatedUser\" : \"RDC_LOAD\", \"marketName\" : \"RETAIL MARKET 426\", \"regionName\" : \"NE/ IA/ NE KS\", \"latitude\" : 42.663322, \"longitude\" : -95.197507, \"formatDescription\" : \"Hypermarket\", \"divisions\" : [ { \"divisionNbr\" : 6, \"divisionDesc\" : \"AUTO CARE CENTER\", \"typeCode\" : 1, \"type\" : \"INCOME DIVISION\", \"openDate\" : \"2002-09-11\", \"statusCode\" : 1, \"regionCode\" : 51, \"subRegionCode\" : 17, \"marketCode\" : 426, \"baseDivisionCode\" : 1, \"subDivisionCode\" : \"M\", \"subDivisionName\" : \"WEST BU\", \"businessUnitOrgAreaCode\" : 3, \"lastUpdatedTimestamp\" : \"2020-06-03\", \"lastUpdatedUser\" : \"HRM DATA\", \"storeCode3\" : \"C\", \"companyCode\" : \"WMW\", \"taxReportCode\" : 110, \"reportCode\" : \"SC\", \"deleteCode\" : \"A\", \"shrinkPctCost\" : 0, \"shrinkRetailPct\" : 0, \"departments\" : [ { \"departmentNbr\" : 10, \"departmentDesc\" : \"AUTOMOTIVE TEST\" } ] } ], \"associates\" : [ { \"firstName\" : \"JOSEPH\", \"lastName\" : \" CLAREY\", \"role\" : \"MGMT-STORE MANAGER\", \"email\" : \"J0C04I9.S01526.US@WAL-MART.COM\", \"fullName\" : \"JOSEPH CLAREY\" } ], \"mainWarehouse\" : 6009, \"lastUpdatedDate\" : \"2020-10-01\", \"lastUpdatedTimestamp\" : \"2020-09-29\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /{countryCode}/location/locationTypeCode/{locationTypeCode} : Fetches all stores information of a given type.
     * Fetches all store information based on country code and location type.
     *
     * @param countryCode Standard country code. Example US &#x3D; USA, CA &#x3D; Canada (required)
     * @param locationTypeCode Code for location type. (required)
     * @param WM_SVC_NAME Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments. (required)
     * @param WM_SVC_ENV Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.  (required)
     * @param WM_CONSUMER_ID Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id &#x3D; 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments.  (required)
     * @param WM_SEC_KEY_VERSION Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_CONSUMER_INTIMESTAMP Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage &amp; prod environments as the signature authentication is in place. (required)
     * @param WM_SEC_AUTH_SIGNATURE Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage &amp; prod environments as the signature authetication is in place. (required)
     * @param f Comma separated list of fields that will be returned in the response. For example: f&#x3D;locationNbr,name (optional)
     * @param offset Zero based index of number of records to skip from start. If not mentioned, it is considered zero. (optional)
     * @param page Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered. (optional)
     * @param pageNumber Zero based index of page to fetch. If offset is provided, that too will be considered. (optional)
     * @param pageSize Specifies number of records per page. (optional)
     * @param paged Pass &#39;true&#39; to request paged information. (optional)
     * @param size Specifies total/max number of records to fetch. (optional)
     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported. (optional, default to new ArrayList&lt;&gt;())
     * @param sortSorted If passed &#39;true&#39;, the sorting criteria mentioned in parameter &#39;sort&#39; is applied. (optional)
     * @param sortUnsorted  (optional)
     * @param unpaged  (optional)
     * @return Successfully returns Stores information for the given country code and location type. (status code 200)
     *         or No Content is returned when there is no data for the given country code and location type. (status code 204)
     *         or Bad Request is returned when one or many given criteria are of wrong data type or value. (status code 400)
     *         or Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception. (status code 500)
     */
    @ApiOperation(value = "Fetches all stores information of a given type.", nickname = "getLocationsByTypeCodeUsingGET", notes = "Fetches all store information based on country code and location type.", response = LocationResponse.class, tags={ "location-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully returns Stores information for the given country code and location type.", response = LocationResponse.class),
        @ApiResponse(code = 204, message = "No Content is returned when there is no data for the given country code and location type."),
        @ApiResponse(code = 400, message = "Bad Request is returned when one or many given criteria are of wrong data type or value.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception.", response = ErrorResponse.class) })
    @RequestMapping(value = "/{countryCode}/location/locationTypeCode/{locationTypeCode}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<LocationResponse> getLocationsByTypeCodeUsingGET(@ApiParam(value = "Standard country code. Example US = USA, CA = Canada",required=true) @PathVariable("countryCode") String countryCode,@ApiParam(value = "Code for location type.",required=true) @PathVariable("locationTypeCode") Integer locationTypeCode,@ApiParam(value = "Unique name ( application key name) of the producer application as registered in the service registry portal  ( https://reg.soa.walmart.com). Consumer applications have to get a subscription to this producer application in the service registry portal. The actual producer application will have a sidecar deployment of service mesh proxy along with it. Hence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.  This header is required in all the environments." ,required=true) @RequestHeader(value="WM_SVC.NAME", required=true) String WM_SVC_NAME,@ApiParam(value = "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to. For each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment. As the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.  Note: Consumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage. " ,required=true) @RequestHeader(value="WM_SVC.ENV", required=true) String WM_SVC_ENV,@ApiParam(value = "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.  Consumer Id can be created in the service registry portal with ssh public key. A unique string will be generated for the given public key.  If a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242  Hence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.  This is a mandatory header in all the environments. " ,required=true) @RequestHeader(value="WM_CONSUMER.ID", required=true) String WM_CONSUMER_ID,@ApiParam(value = "Key version of the consumer Id as per the service registry portal. This is autogenerated field when consumer Id is created.  This is a mandatory header in stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_SEC.KEY_VERSION", required=true) Integer WM_SEC_KEY_VERSION,@ApiParam(value = "Timestamp in epoch at the time of signature generation. As the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.  This is a mandatory field for stage & prod environments as the signature authentication is in place." ,required=true) @RequestHeader(value="WM_CONSUMER.INTIMESTAMP", required=true) Integer WM_CONSUMER_INTIMESTAMP,@ApiParam(value = "Generated signature for authentication. Signature is generated based on private key, consumer Id and the key version.  As the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm. Signature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.  This is a mandatory header to be passed in stage & prod environments as the signature authetication is in place." ,required=true) @RequestHeader(value="WM_SEC.AUTH_SIGNATURE", required=true) String WM_SEC_AUTH_SIGNATURE,@ApiParam(value = "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name") @Valid @RequestParam(value = "f", required = false) String f,@ApiParam(value = "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.") @Valid @RequestParam(value = "offset", required = false) Long offset,@ApiParam(value = "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.") @Valid @RequestParam(value = "page", required = false) Integer page,@ApiParam(value = "Zero based index of page to fetch. If offset is provided, that too will be considered.") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber,@ApiParam(value = "Specifies number of records per page.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Pass 'true' to request paged information.") @Valid @RequestParam(value = "paged", required = false) Boolean paged,@ApiParam(value = "Specifies total/max number of records to fetch.") @Valid @RequestParam(value = "size", required = false) Integer size,@ApiParam(value = "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.") @Valid @RequestParam(value = "sort", required = false) List<String> sort,@ApiParam(value = "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.") @Valid @RequestParam(value = "sort.sorted", required = false) Boolean sortSorted,@ApiParam(value = "") @Valid @RequestParam(value = "sort.unsorted", required = false) Boolean sortUnsorted,@ApiParam(value = "") @Valid @RequestParam(value = "unpaged", required = false) Boolean unpaged) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true, \"timestamp\" : \"2020-10-06 11:22:38\", \"data\" : [ { \"id\" : \"US1526\", \"locationNbr\" : 1526, \"name\" : \"STORM LAKE IA\", \"openDate\" : \"1990-04-02\", \"streetAddress\" : \"1831 LAKE AVE\", \"city\" : \"STORM LAKE\", \"stateProvinceCode\" : \"IA\", \"stateProvinceId\" : 15, \"stateProvince\" : \"IOWA\", \"postalCode\" : \"50588-7606\", \"country\" : \"US\", \"timeZoneId\" : \"America/Chicago\", \"timeZoneCode\" : \"CDT\", \"glnNumbers\" : [ \"0078742014937\" ], \"timeZoneDSTObservable\" : true, \"logisticalCountryCode\" : \"US\", \"type\" : \"Retail\", \"typeCode\" : 100001, \"statusCode\" : 5, \"status\" : \"OLD, MORE THAN 13 MONTHS SINCE RE-GRAND\", \"buID\" : 295634, \"tempStoreFlag\" : false, \"languageCode\" : 101, \"bannerCode\" : \"A1\", \"bannerDesc\" : \"WM Supercenter\", \"currencyCode\" : \"USD\", \"replenishmentTypeCode\" : \"U\", \"phoneNbr\" : \"7127327940\", \"baseDivisionCode\" : 1, \"homeStoreNbr\" : 1361, \"isSalesCompable\" : true, \"isOpenSunday\" : true, \"merchandiseMajorZoneNbr\" : 80, \"merchandiseSubZoneNbr\" : 85, \"expansionSize\" : 65930, \"grossSize\" : 157131, \"lastUpdatedUser\" : \"RDC_LOAD\", \"marketName\" : \"RETAIL MARKET 426\", \"regionName\" : \"NE/ IA/ NE KS\", \"latitude\" : 42.663322, \"longitude\" : -95.197507, \"formatDescription\" : \"Hypermarket\", \"divisions\" : [ { \"divisionNbr\" : 6, \"divisionDesc\" : \"AUTO CARE CENTER\", \"typeCode\" : 1, \"type\" : \"INCOME DIVISION\", \"openDate\" : \"2002-09-11\", \"statusCode\" : 1, \"regionCode\" : 51, \"subRegionCode\" : 17, \"marketCode\" : 426, \"baseDivisionCode\" : 1, \"subDivisionCode\" : \"M\", \"subDivisionName\" : \"WEST BU\", \"businessUnitOrgAreaCode\" : 3, \"lastUpdatedTimestamp\" : \"2020-06-03\", \"lastUpdatedUser\" : \"HRM DATA\", \"storeCode3\" : \"C\", \"companyCode\" : \"WMW\", \"taxReportCode\" : 110, \"reportCode\" : \"SC\", \"deleteCode\" : \"A\", \"shrinkPctCost\" : 0, \"shrinkRetailPct\" : 0, \"departments\" : [ { \"departmentNbr\" : 10, \"departmentDesc\" : \"AUTOMOTIVE TEST\" } ] } ], \"associates\" : [ { \"firstName\" : \"JOSEPH\", \"lastName\" : \" CLAREY\", \"role\" : \"MGMT-STORE MANAGER\", \"email\" : \"J0C04I9.S01526.US@WAL-MART.COM\", \"fullName\" : \"JOSEPH CLAREY\" } ], \"mainWarehouse\" : 6009, \"lastUpdatedDate\" : \"2020-10-01\", \"lastUpdatedTimestamp\" : \"2020-09-29\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });

        System.out.println("ctrl alt elite");
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }



}
