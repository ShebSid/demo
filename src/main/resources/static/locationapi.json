{
    "openapi": "3.0.2",
    "info": {
        "title": "Location Service",
        "version": "1.0",
        "description": "Location is a routing service to global MDM service to fetch store information."
    },
    "servers": [
        {
            "url": "https://locapi-p-ca.prod01.gbs.ase.southcentralus.us.walmart.net/",
            "description": "Production server for Canada at south central US."
        },
        {
            "url": "https://locapi-p-us.prod01.gbs.ase.southcentralus.us.walmart.net/",
            "description": "Production server for US at south central US"
        },
        {
            "url": "https://locapi-q-us.dev01.gbs.ase.southcentralus.us.walmart.net/",
            "description": "QA server for US at south central US."
        },
        {
            "url": "https://locapi-q-ca.dev01.gbs.ase.southcentralus.us.walmart.net/",
            "description": "QA server for Canada at south central US"
        },
        {
            "url": "https://locapi-s-us.dev02.gbs.ase.southcentralus.us.walmart.net/",
            "description": "Staging server for US at south central US."
        },
        {
            "url": "https://locapi-s-us.dev01.gbs.ase.eastus2.us.walmart.net/",
            "description": "Staging server for US at east US"
        },
        {
            "url": "https://locapi-s-ca.dev02.gbs.ase.southcentralus.us.walmart.net/",
            "description": "Staging server for Canada at south central US."
        },
        {
            "url": "https://locapi-s-ca.dev01.gbs.ase.eastus2.us.walmart.net/",
            "description": "Staging server for Canada at east US"
        },
        {
            "url": "https://locapi-p-us.prod01.gbs.ase.eastus2.us.walmart.net/",
            "description": "Production server for US at east US."
        },
        {
            "url": "https://locapi-p-ca.prod01.gbs.ase.eastus2.us.walmart.net/",
            "description": "Production server for Canada at east US."
        }
    ],
    "paths": {
        "/{countryCode}/location": {
            "summary": "Represents stores information in a country.",
            "description": "Represents stores information in a country.",
            "get": {
                "tags": [
                    "location-controller"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "description": "Standard country code. Example US = USA, CA = Canada",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "f",
                        "description": "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "description": "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageNumber",
                        "description": "Zero based index of page to fetch. If offset is provided, that too will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageSize",
                        "description": "Specifies number of records per page.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "paged",
                        "description": "Pass 'true' to request paged information.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "size",
                        "description": "Specifies total/max number of records to fetch.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "style": "form",
                        "explode": true,
                        "name": "sort",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.sorted",
                        "description": "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.unsorted",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "unpaged",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "WM_SVC.NAME",
                        "description": "Unique name ( application key name) of the producer application as registered in the service registry portal \n( https://reg.soa.walmart.com).\nConsumer applications have to get a subscription to this producer application in the service registry portal.\nThe actual producer application will have a sidecar deployment of service mesh proxy along with it.\nHence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.\n\nThis header is required in all the environments.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SVC.ENV",
                        "description": "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to.\nFor each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment.\nAs the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.\n\nNote:\nConsumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_CONSUMER.ID",
                        "description": "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.\n\nConsumer Id can be created in the service registry portal with ssh public key.\nA unique string will be generated for the given public key.\n\nIf a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242\n\nHence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.\n\nThis is a mandatory header in all the environments.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SEC.KEY_VERSION",
                        "description": "Key version of the consumer Id as per the service registry portal.\nThis is autogenerated field when consumer Id is created.\n\nThis is a mandatory header in stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "description": "Timestamp in epoch at the time of signature generation.\nAs the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.\n\nThis is a mandatory field for stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "description": "Generated signature for authentication.\nSignature is generated based on private key, consumer Id and the key version.\n\nAs the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm.\nSignature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.\n\nThis is a mandatory header to be passed in stage & prod environments as the signature authetication is in place.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationResponse"
                                }

                            }
                        },
                        "description": "Successfully returns Stores information for the given country code and search criteria like locationNbr, name, etc."
                    },
                    "204": {
                        "description": "No Content is returned when there is no data for the given country code and search criteria like locationNbr, name, etc."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request is returned when one or many given criteria are of wrong data type or value."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception."
                    }
                },
                "deprecated": false,
                "operationId": "getAllLocationsUsingGET",
                "summary": "Fetches all stores information in a given country.",
                "description": "Fetch all stores information using country code."
            }
        },
        "/{countryCode}/location/centerManaged": {
            "summary": "Represents stores information in a country based on Centre Managed Flag",
            "description": "Represents stores information in a country based on Centre Managed Flag",
            "get": {
                "tags": [
                    "location-controller"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "description": "Standard country code. Example US = USA, CA = Canada",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "flag",
                        "description": "Flag to indicate whether it is Centre Managed or not. 0 for No and 1 for Yes",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "WM_SVC.NAME",
                        "description": "Unique name ( application key name) of the producer application as registered in the service registry portal \n( https://reg.soa.walmart.com).\nConsumer applications have to get a subscription to this producer application in the service registry portal.\nThe actual producer application will have a sidecar deployment of service mesh proxy along with it.\nHence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.\n\nThis header is required in all the environments.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SVC.ENV",
                        "description": "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to.\nFor each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment.\nAs the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.\n\nNote:\nConsumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_CONSUMER.ID",
                        "description": "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.\n\nConsumer Id can be created in the service registry portal with ssh public key.\nA unique string will be generated for the given public key.\n\nIf a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242\n\nHence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.\n\nThis is a mandatory header in all the environments.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SEC.KEY_VERSION",
                        "description": "Key version of the consumer Id as per the service registry portal.\nThis is autogenerated field when consumer Id is created.\n\nThis is a mandatory header in stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "description": "Timestamp in epoch at the time of signature generation.\nAs the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.\n\nThis is a mandatory field for stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "description": "Generated signature for authentication.\nSignature is generated based on private key, consumer Id and the key version.\n\nAs the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm.\nSignature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.\n\nThis is a mandatory header to be passed in stage & prod environments as the signature authetication is in place.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessCenterManagedResponse"
                                }

                            }
                        },
                        "description": "Successfully returns Stores information for the given country code and Centre Managed flag."
                    },
                    "204": {
                        "description": "No Content is returned when there is no data for the given country code and Centre Managed flag."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request is returned when one or many given criteria are of wrong data type or value."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception."
                    }
                },
                "operationId": "getLocationNumberByCenterManaged",
                "summary": "Fetches all stores information for a given country for centre Managed",
                "description": "Fetch all stores information using country code and Centre Managed flag"
            }
        },
        "/{countryCode}/location/departmentNumber/{departmentNumber}": {
            "summary": "Represents all stores information for a department in a country.",
            "description": "Represents all stores information for a department in a country.",
            "get": {
                "tags": [
                    "location-controller"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "description": "Standard country code. Example US = USA, CA = Canada",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "departmentNumber",
                        "description": "Department number.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "f",
                        "description": "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "description": "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageNumber",
                        "description": "Zero based index of page to fetch. If offset is provided, that too will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageSize",
                        "description": "Specifies number of records per page.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "paged",
                        "description": "Pass 'true' to request paged information.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "size",
                        "description": "Specifies total/max number of records to fetch.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "style": "form",
                        "explode": true,
                        "name": "sort",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.sorted",
                        "description": "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.unsorted",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "unpaged",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "WM_SVC.NAME",
                        "description": "Unique name ( application key name) of the producer application as registered in the service registry portal \n( https://reg.soa.walmart.com).\nConsumer applications have to get a subscription to this producer application in the service registry portal.\nThe actual producer application will have a sidecar deployment of service mesh proxy along with it.\nHence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.\n\nThis header is required in all the environments.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SVC.ENV",
                        "description": "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to.\nFor each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment.\nAs the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.\n\nNote:\nConsumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_CONSUMER.ID",
                        "description": "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.\n\nConsumer Id can be created in the service registry portal with ssh public key.\nA unique string will be generated for the given public key.\n\nIf a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242\n\nHence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.\n\nThis is a mandatory header in all the environments.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SEC.KEY_VERSION",
                        "description": "Key version of the consumer Id as per the service registry portal.\nThis is autogenerated field when consumer Id is created.\n\nThis is a mandatory header in stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "description": "Timestamp in epoch at the time of signature generation.\nAs the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.\n\nThis is a mandatory field for stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "description": "Generated signature for authentication.\nSignature is generated based on private key, consumer Id and the key version.\n\nAs the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm.\nSignature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.\n\nThis is a mandatory header to be passed in stage & prod environments as the signature authetication is in place.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationResponse"
                                }
                            }
                        },
                        "description": "Successfully returns Stores information for the given country code and department number."
                    },
                    "204": {
                        "description": "No Content is returned when there is no data for the given country code and department number."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request is returned when one or many given criteria are of wrong data type or value."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception."
                    }
                },
                "deprecated": false,
                "operationId": "getLocationsByDepartmentNumberUsingGET",
                "summary": "Fetches all stores information for a given country and department.",
                "description": "Fetch all stores information using country code and department number."
            }
        },
        "/{countryCode}/location/divisionNumber/{divisionNumber}": {
            "summary": "Represents all stores information in a country and in a division.",
            "description": "Represents all stores information in a country and in a division.",
            "get": {
                "tags": [
                    "location-controller"
                ],
                "parameters": [
                    {
                        "name": "bannerCode",
                        "description": "bannerCode",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {

                        "name": "countryCode",
                        "description": "Standard country code. Example US = USA, CA = Canada",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "divisionNumber",
                        "description": "Division number",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "f",
                        "description": "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "languageCode",
                        "description": "languageCode",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "description": "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageNumber",
                        "description": "Zero based index of page to fetch. If offset is provided, that too will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageSize",
                        "description": "Specifies number of records per page.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "paged",
                        "description": "Pass 'true' to request paged information.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "size",
                        "description": "Specifies total/max number of records to fetch.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "style": "form",
                        "explode": true,
                        "name": "sort",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.sorted",
                        "description": "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.unsorted",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "unpaged",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "WM_SVC.NAME",
                        "description": "Unique name ( application key name) of the producer application as registered in the service registry portal \n( https://reg.soa.walmart.com).\nConsumer applications have to get a subscription to this producer application in the service registry portal.\nThe actual producer application will have a sidecar deployment of service mesh proxy along with it.\nHence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.\n\nThis header is required in all the environments.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SVC.ENV",
                        "description": "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to.\nFor each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment.\nAs the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.\n\nNote:\nConsumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_CONSUMER.ID",
                        "description": "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.\n\nConsumer Id can be created in the service registry portal with ssh public key.\nA unique string will be generated for the given public key.\n\nIf a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242\n\nHence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.\n\nThis is a mandatory header in all the environments.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SEC.KEY_VERSION",
                        "description": "Key version of the consumer Id as per the service registry portal.\nThis is autogenerated field when consumer Id is created.\n\nThis is a mandatory header in stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "description": "Timestamp in epoch at the time of signature generation.\nAs the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.\n\nThis is a mandatory field for stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "description": "Generated signature for authentication.\nSignature is generated based on private key, consumer Id and the key version.\n\nAs the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm.\nSignature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.\n\nThis is a mandatory header to be passed in stage & prod environments as the signature authetication is in place.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationResponse"
                                }

                            }
                        },
                        "description": "Successfully returns Stores information for the given country code and division number."
                    },
                    "204": {
                        "description": "No Content is returned when there is no data for the given country code and division number."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request is returned when one or many given criteria are of wrong data type or value."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception."
                    }
                },
                "deprecated": false,
                "operationId": "getLocationsByDivisionNumberUsingGET",
                "summary": "Gets all stores information for given country and division",
                "description": "Fetch all stores information using given country code and division number."
            }
        },
        "/{countryCode}/location/glnNumber/{glnNumber}": {
            "summary": "Represents a store information in a country and for given GIN number.",
            "description": "Represents a store information in a country and for given GIN number.",
            "get": {
                "tags": [
                    "location-controller"
                ],
                "parameters": [
                    {

                        "name": "countryCode",
                        "description": "Standard country code. Example US = USA, CA = Canada",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "f",
                        "description": "Optional. Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "glnNumber",
                        "description": "GIN number",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {

                        "name": "WM_SVC.NAME",
                        "description": "Unique name ( application key name) of the producer application as registered in the service registry portal \n( https://reg.soa.walmart.com).\nConsumer applications have to get a subscription to this producer application in the service registry portal.\nThe actual producer application will have a sidecar deployment of service mesh proxy along with it.\nHence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.\n\nThis header is required in all the environments.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SVC.ENV",
                        "description": "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to.\nFor each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment.\nAs the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.\n\nNote:\nConsumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_CONSUMER.ID",
                        "description": "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.\n\nConsumer Id can be created in the service registry portal with ssh public key.\nA unique string will be generated for the given public key.\n\nIf a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242\n\nHence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.\n\nThis is a mandatory header in all the environments.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SEC.KEY_VERSION",
                        "description": "Key version of the consumer Id as per the service registry portal.\nThis is autogenerated field when consumer Id is created.\n\nThis is a mandatory header in stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "description": "Timestamp in epoch at the time of signature generation.\nAs the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.\n\nThis is a mandatory field for stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "description": "Generated signature for authentication.\nSignature is generated based on private key, consumer Id and the key version.\n\nAs the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm.\nSignature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.\n\nThis is a mandatory header to be passed in stage & prod environments as the signature authetication is in place.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationSingleResponse"
                                }

                            }
                        },
                        "description": "Successfully returns Stores information for the given country code and GLN number."
                    },
                    "204": {
                        "description": "No Content is returned when there is no data for the given country code and GLN number."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }

                            }
                        },
                        "description": "Bad Request is returned when one or many given criteria are of wrong data type or value."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception."
                    }
                },
                "deprecated": false,
                "operationId": "getLocationByGLNNumberUsingGET",
                "summary": "Fetches the store information in a country for given GIN number.",
                "description": "Fetch store information using country code and GLN number."
            }
        },
        "/{countryCode}/location/locationNumber/{locationNumber}": {
            "summary": "Represents a particular store information in a country.",
            "description": "Represents a particular store information in a country.",
            "get": {
                "tags": [
                    "location-controller"
                ],
                "parameters": [
                    {

                        "name": "countryCode",
                        "description": "Standard country code. Example US = USA, CA = Canada",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "f",
                        "description": "Optional. Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {

                        "name": "locationNumber",
                        "description": "Unique location number",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    },
                    {

                        "name": "WM_SVC.NAME",
                        "description": "Unique name ( application key name) of the producer application as registered in the service registry portal \n( https://reg.soa.walmart.com).\nConsumer applications have to get a subscription to this producer application in the service registry portal.\nThe actual producer application will have a sidecar deployment of service mesh proxy along with it.\nHence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.\n\nThis header is required in all the environments.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SVC.ENV",
                        "description": "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to.\nFor each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment.\nAs the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.\n\nNote:\nConsumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_CONSUMER.ID",
                        "description": "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.\n\nConsumer Id can be created in the service registry portal with ssh public key.\nA unique string will be generated for the given public key.\n\nIf a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242\n\nHence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.\n\nThis is a mandatory header in all the environments.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SEC.KEY_VERSION",
                        "description": "Key version of the consumer Id as per the service registry portal.\nThis is autogenerated field when consumer Id is created.\n\nThis is a mandatory header in stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "description": "Timestamp in epoch at the time of signature generation.\nAs the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.\n\nThis is a mandatory field for stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "description": "Generated signature for authentication.\nSignature is generated based on private key, consumer Id and the key version.\n\nAs the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm.\nSignature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.\n\nThis is a mandatory header to be passed in stage & prod environments as the signature authetication is in place.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationSingleResponse"
                                }

                            }
                        },
                        "description": "Successfully returns Stores information for the given country code and location number."
                    },
                    "204": {
                        "description": "No Content is returned when there is no data for the given country code and location number."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }

                            }
                        },
                        "description": "Bad Request is returned when one or many given criteria are of wrong data type or value."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception."
                    }
                },
                "deprecated": false,
                "operationId": "getLocationByNumberUsingGET",
                "summary": "Fetches a particular store information in a country.",
                "description": "Fetches a particular store information based on country code and location number."
            }
        },
        "/{countryCode}/location/locationTypeCode/{locationTypeCode}": {
            "summary": "Represents stores in a country that are of a particular type.",
            "description": "Represents stores in a country that are of a particular type.",
            "get": {
                "tags": [
                    "location-controller"
                ],
                "parameters": [
                    {

                        "name": "countryCode",
                        "description": "Standard country code. Example US = USA, CA = Canada",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "f",
                        "description": "Comma separated list of fields that will be returned in the response. For example: f=locationNbr,name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {

                        "name": "locationTypeCode",
                        "description": "Code for location type.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "description": "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Results page you want to retrieve (0..N). If offset is specified, it will be considered too. If not specified, all pages in the result set will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageNumber",
                        "description": "Zero based index of page to fetch. If offset is provided, that too will be considered.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "pageSize",
                        "description": "Specifies number of records per page.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "paged",
                        "description": "Pass 'true' to request paged information.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "size",
                        "description": "Specifies total/max number of records to fetch.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "style": "form",
                        "explode": true,
                        "name": "sort",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.sorted",
                        "description": "If passed 'true', the sorting criteria mentioned in parameter 'sort' is applied.",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sort.unsorted",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "unpaged",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {

                        "name": "WM_SVC.NAME",
                        "description": "Unique name ( application key name) of the producer application as registered in the service registry portal \n( https://reg.soa.walmart.com).\nConsumer applications have to get a subscription to this producer application in the service registry portal.\nThe actual producer application will have a sidecar deployment of service mesh proxy along with it.\nHence all the consumers need to pass the mandatory headers and get authorization and authentication to reach the application.\n\nThis header is required in all the environments.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SVC.ENV",
                        "description": "Name of the environment of the producer application in the service registry portal to which consumer application is subscribed to.\nFor each environment which has to be deployed, an environment is created in service registry portal and same is used to configure the sidecar proxy deployment.\nAs the subscription in service mesh is environment specific; this is a mandatory parameter in all the environments.\n\nNote:\nConsumers have to pass enviroments according to their subscription. For example if the dev environment of the consumer application is having a subscription to stage environment of the producer application; then only from dev environment of the consumer application stage environment of the producer can be called by passing the WM_SVC.ENV value as stage.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_CONSUMER.ID",
                        "description": "Consumer Id in the consumer application from which it has a subscription to the environment (value of WM_SVC.ENV) of the producer application.\n\nConsumer Id can be created in the service registry portal with ssh public key.\nA unique string will be generated for the given public key.\n\nIf a consumer application in dev environment(with consumer Id = 3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242) have a subscription to stage environment of the producer application ( AP-FDS-LOCATIONS-API), then there will be an entry created in the service registry database as AP-FDS-LOCATIONS-API/stage/3fa1e5b2-6c55-4d0f-8ae5-634dbbb723242\n\nHence when the consumer pass these 3 headers, it will match with the entry in the database; hence the request will be authorized.\n\nThis is a mandatory header in all the environments.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SEC.KEY_VERSION",
                        "description": "Key version of the consumer Id as per the service registry portal.\nThis is autogenerated field when consumer Id is created.\n\nThis is a mandatory header in stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "description": "Timestamp in epoch at the time of signature generation.\nAs the generated signature expires every 5 mins, timestamp field has to be passed with the signature for the validation.\n\nThis is a mandatory field for stage & prod environments as the signature authentication is in place.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "header",
                        "required": true
                    },
                    {

                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "description": "Generated signature for authentication.\nSignature is generated based on private key, consumer Id and the key version.\n\nAs the public key is available in service registry portal ( as we have generated consumer Id by submitting ssh public key), generated signature will be decoded by public key and validated using RSA algorithm.\nSignature will be valid for 5 mins, so that after every 5 mins signature should be regenerated for the new requests.\n\nThis is a mandatory header to be passed in stage & prod environments as the signature authetication is in place.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationResponse"
                                }

                            }
                        },
                        "description": "Successfully returns Stores information for the given country code and location type."
                    },
                    "204": {
                        "description": "No Content is returned when there is no data for the given country code and location type."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }

                            }
                        },
                        "description": "Bad Request is returned when one or many given criteria are of wrong data type or value."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error is returned in case there is a connectivity issue with the dependent resource or the dependent resource itself throws some exception."
                    }
                },
                "deprecated": false,
                "operationId": "getLocationsByTypeCodeUsingGET",
                "summary": "Fetches all stores information of a given type.",
                "description": "Fetches all store information based on country code and location type."
            }
        }
    } ,
    "components": {
        "schemas": {
            "Pageable": {
                "description": "Metadata information representing pagination properties.",
                "type": "object",
                "properties": {
                    "pageSize": {
                        "format": "int32",
                        "description": "Specifies number of records per page.",
                        "type": "integer"
                    },
                    "pageNumber": {
                        "format": "int32",
                        "description": "Represents zero based index of page to fetch. If offset is provided, that too will be considered.",
                        "type": "integer"
                    },
                    "offset": {
                        "format": "int64",
                        "description": "Zero based index of number of records to skip from start. If not mentioned, it is considered zero.",
                        "type": "integer"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/Sort",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
                    },
                    "paged": {
                        "description": "Boolean to represent paged information.",
                        "type": "boolean"
                    },
                    "unpaged": {
                        "description": "Boolean to represent if the pagination is enabled or not.",
                        "type": "boolean"
                    }
                }
            },
            "Sort": {
                "description": "Metadata information representing sorting properties.",
                "type": "object",
                "properties": {
                    "unsorted": {
                        "type": "boolean"
                    },
                    "sorted": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "Associates": {
                "description": "Associates details.",
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "Associate first name.",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Associate last name.",
                        "type": "string"
                    },
                    "role": {
                        "description": "Associate role.",
                        "type": "string"
                    },
                    "email": {
                        "description": "Associate name.",
                        "type": "string"
                    },
                    "fullName": {
                        "description": "Associate full name.",
                        "type": "string"
                    }
                },
                "example": {
                    "firstName": "JOSEPH",
                    "lastName": " CLAREY",
                    "role": "MGMT-STORE MANAGER",
                    "email": "J0C04I9.S01526.US@WAL-MART.COM",
                    "fullName": "JOSEPH CLAREY"
                }
            },
            "Department": {
                "description": "Department details.",
                "type": "object",
                "properties": {
                    "departmentNbr": {
                        "format": "int32",
                        "description": "Department number.",
                        "type": "integer"
                    },
                    "departmentDesc": {
                        "description": "Department description.",
                        "type": "string"
                    }
                },
                "example": {
                    "departmentNbr": 10,
                    "departmentDesc": "AUTOMOTIVE TEST"
                }
            },
            "Division": {
                "description": "Division details.",
                "type": "object",
                "properties": {
                    "divisionNbr": {
                        "format": "int32",
                        "description": "Division number.",
                        "type": "integer"
                    },
                    "divisionDesc": {
                        "description": "Division description.",
                        "type": "string"
                    },
                    "typeCode": {
                        "format": "int32",
                        "description": "Division type code.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Division type.",
                        "type": "string"
                    },
                    "openDate": {
                        "format": "date",
                        "description": "Open date.",
                        "type": "string"
                    },
                    "statusCode": {
                        "format": "int32",
                        "description": "Status code.",
                        "type": "integer"
                    },
                    "regionCode": {
                        "format": "int32",
                        "description": "Region code.",
                        "type": "integer"
                    },
                    "subRegionCode": {
                        "format": "int32",
                        "description": "Sub region code.",
                        "type": "integer"
                    },
                    "marketCode": {
                        "format": "int32",
                        "description": "Market code.",
                        "type": "integer"
                    },
                    "baseDivisionCode": {
                        "format": "int32",
                        "description": "Base division code.",
                        "type": "integer"
                    },
                    "subDivisionCode": {
                        "description": "Sub division code.",
                        "type": "string"
                    },
                    "subDivisionName": {
                        "description": "Sub division name.",
                        "type": "string"
                    },
                    "businessUnitOrgAreaCode": {
                        "format": "int32",
                        "description": "Business unit organization area code.",
                        "type": "integer"
                    },
                    "lastUpdatedTimestamp": {
                        "format": "date",
                        "description": "Last updated timestamp.",
                        "type": "string"
                    },
                    "lastUpdatedUser": {
                        "description": "Last updated user.",
                        "type": "string"
                    },
                    "storeCode3": {
                        "description": "Store code 3.",
                        "type": "string"
                    },
                    "companyCode": {
                        "description": "Company code.",
                        "type": "string"
                    },
                    "taxReportCode": {
                        "format": "int32",
                        "description": "Tax report code.",
                        "type": "integer"
                    },
                    "reportCode": {
                        "description": "Report code.",
                        "type": "string"
                    },
                    "deleteCode": {
                        "description": "Delete code.",
                        "type": "string"
                    },
                    "shrinkPctCost": {
                        "format": "int32",
                        "description": "Shrink packet cost.",
                        "type": "integer"
                    },
                    "shrinkRetailPct": {
                        "format": "int32",
                        "description": "Shrink retail packet.",
                        "type": "integer"
                    },
                    "departments": {
                        "description": "List of all departments for a division.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Department"
                        }
                    }
                },
                "example": {
                    "divisionNbr": 6,
                    "divisionDesc": "AUTO CARE CENTER",
                    "typeCode": 1,
                    "type": "INCOME DIVISION",
                    "openDate": "2002-09-11",
                    "statusCode": 1,
                    "regionCode": 51,
                    "subRegionCode": 17,
                    "marketCode": 426,
                    "baseDivisionCode": 1,
                    "subDivisionCode": "M",
                    "subDivisionName": "WEST BU",
                    "businessUnitOrgAreaCode": 3,
                    "lastUpdatedTimestamp": "2020-06-03",
                    "lastUpdatedUser": "HRM DATA",
                    "storeCode3": "C",
                    "companyCode": "WMW",
                    "taxReportCode": 110,
                    "reportCode": "SC",
                    "deleteCode": "A",
                    "shrinkPctCost": 0,
                    "shrinkRetailPct": 0,
                    "departments": [
                        {
                            "departmentNbr": 10,
                            "departmentDesc": "AUTOMOTIVE TEST"
                        }
                    ]
                }
            },
            "Location": {
                "description": "Complete Location object.",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Location ID.",
                        "type": "string"
                    },
                    "locationNbr": {
                        "format": "int32",
                        "description": "Location number.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Location name.",
                        "type": "string"
                    },
                    "openDate": {
                        "format": "date",
                        "description": "Location open date.",
                        "type": "string"
                    },
                    "closeDate": {
                        "format": "date",
                        "description": "Close date.",
                        "type": "string"
                    },
                    "streetAddress": {
                        "description": "Street address.",
                        "type": "string"
                    },
                    "city": {
                        "description": "City.",
                        "type": "string"
                    },
                    "stateProvinceCode": {
                        "description": "State province code.",
                        "type": "string"
                    },
                    "stateProvinceId": {
                        "format": "int32",
                        "description": "State province ID.",
                        "type": "integer"
                    },
                    "stateProvince": {
                        "description": "State province.",
                        "type": "string"
                    },
                    "postalCode": {
                        "description": "Postal code.",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country.",
                        "type": "string"
                    },
                    "timeZoneId": {
                        "description": "Timezone ID.",
                        "type": "string"
                    },
                    "timeZoneCode": {
                        "description": "Time zone code.",
                        "type": "string"
                    },
                    "glnNumbers": {
                        "description": "List of gln numbers.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timeZoneDSTObservable": {
                        "description": "Boolean to indicate Time zone DST observable.",
                        "type": "boolean"
                    },
                    "logisticalCountryCode": {
                        "description": "Logistical country code.",
                        "type": "string"
                    },
                    "type": {
                        "description": "Location type.",
                        "type": "string"
                    },
                    "typeCode": {
                        "format": "int32",
                        "description": "Location type code.",
                        "type": "integer"
                    },
                    "statusCode": {
                        "format": "int32",
                        "description": "Status code.",
                        "type": "integer"
                    },
                    "status": {
                        "description": "Status.",
                        "type": "string"
                    },
                    "buID": {
                        "format": "int32",
                        "description": "BU ID.",
                        "type": "integer"
                    },
                    "tempStoreFlag": {
                        "description": "Boolean to indicate temporary store.",
                        "type": "boolean"
                    },
                    "tempStoreNumber": {
                        "format": "int32",
                        "description": "Temporary store number.",
                        "type": "integer"
                    },
                    "dcSupportTypeCode": {
                        "description": "Delivery center support type code.",
                        "type": "string"
                    },
                    "languageCode": {
                        "format": "int32",
                        "description": "Language code.",
                        "type": "integer"
                    },
                    "bannerCode": {
                        "description": "Banner code.",
                        "type": "string"
                    },
                    "bannerDesc": {
                        "description": "Banner description.",
                        "type": "string"
                    },
                    "currencyCode": {
                        "description": "Currency code.",
                        "type": "string"
                    },
                    "replenishmentTypeCode": {
                        "description": "Replenishment type code.",
                        "type": "string"
                    },
                    "phoneNbr": {
                        "description": "Phone number.",
                        "type": "string"
                    },
                    "baseDivisionCode": {
                        "format": "int32",
                        "description": "Base division code.",
                        "type": "integer"
                    },
                    "homeStoreNbr": {
                        "format": "int32",
                        "description": "Home store number.",
                        "type": "integer"
                    },
                    "isSalesCompable": {
                        "description": "Boolean for sales compable.",
                        "type": "boolean"
                    },
                    "isOpenSunday": {
                        "description": "Boolean to check if open on Sunday.",
                        "type": "boolean"
                    },
                    "merchandiseMajorZoneNbr": {
                        "format": "int32",
                        "description": "Merchandise major zone number.",
                        "type": "integer"
                    },
                    "merchandiseSubZoneNbr": {
                        "format": "int32",
                        "description": "Merchandise sub zone number.",
                        "type": "integer"
                    },
                    "expansionOpenDate": {
                        "format": "date",
                        "description": "Expansion open date.",
                        "type": "string"
                    },
                    "expansionSize": {
                        "format": "int32",
                        "description": "Expansion size.",
                        "type": "integer"
                    },
                    "grossSize": {
                        "format": "int32",
                        "description": "Gross size.",
                        "type": "integer"
                    },
                    "lastUpdatedUser": {
                        "description": "Last updated user.",
                        "type": "string"
                    },
                    "marketName": {
                        "description": "Market name.",
                        "type": "string"
                    },
                    "regionName": {
                        "description": "Region name.",
                        "type": "string"
                    },
                    "latitude": {
                        "format": "double",
                        "description": "Latitude.",
                        "type": "number"
                    },
                    "longitude": {
                        "format": "double",
                        "description": "Longitude.",
                        "type": "number"
                    },
                    "formatDescription": {
                        "description": "Format description.",
                        "type": "string"
                    },
                    "divisions": {
                        "description": "List of Divisions.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Division"
                        }
                    },
                    "associates": {
                        "description": "List of associates.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Associates"
                        }
                    },
                    "mainWarehouse": {
                        "format": "int32",
                        "description": "Main warehouse.",
                        "type": "integer"
                    },
                    "lastUpdatedDate": {
                        "format": "date",
                        "description": "Last updated date.",
                        "type": "string"
                    },
                    "centerManaged": {
                        "format": "int32",
                        "description": "Center managed.",
                        "type": "integer"
                    },
                    "lastUpdatedTimestamp": {
                        "format": "date",
                        "description": "Last updated timestamp.",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "US1526",
                    "locationNbr": 1526,
                    "name": "STORM LAKE IA",
                    "openDate": "1990-04-02",
                    "streetAddress": "1831 LAKE AVE",
                    "city": "STORM LAKE",
                    "stateProvinceCode": "IA",
                    "stateProvinceId": 15,
                    "stateProvince": "IOWA",
                    "postalCode": "50588-7606",
                    "country": "US",
                    "timeZoneId": "America/Chicago",
                    "timeZoneCode": "CDT",
                    "glnNumbers": [
                        "0078742014937"
                    ],
                    "timeZoneDSTObservable": true,
                    "logisticalCountryCode": "US",
                    "type": "Retail",
                    "typeCode": 100001,
                    "statusCode": 5,
                    "status": "OLD, MORE THAN 13 MONTHS SINCE RE-GRAND",
                    "buID": 295634,
                    "tempStoreFlag": false,
                    "languageCode": 101,
                    "bannerCode": "A1",
                    "bannerDesc": "WM Supercenter",
                    "currencyCode": "USD",
                    "replenishmentTypeCode": "U",
                    "phoneNbr": "7127327940",
                    "baseDivisionCode": 1,
                    "homeStoreNbr": 1361,
                    "isSalesCompable": true,
                    "isOpenSunday": true,
                    "merchandiseMajorZoneNbr": 80,
                    "merchandiseSubZoneNbr": 85,
                    "expansionSize": 65930,
                    "grossSize": 157131,
                    "lastUpdatedUser": "RDC_LOAD",
                    "marketName": "RETAIL MARKET 426",
                    "regionName": "NE/ IA/ NE KS",
                    "latitude": 42.663322,
                    "longitude": -95.197507,
                    "formatDescription": "Hypermarket",
                    "divisions": [
                        {
                            "divisionNbr": 6,
                            "divisionDesc": "AUTO CARE CENTER",
                            "typeCode": 1,
                            "type": "INCOME DIVISION",
                            "openDate": "2002-09-11",
                            "statusCode": 1,
                            "regionCode": 51,
                            "subRegionCode": 17,
                            "marketCode": 426,
                            "baseDivisionCode": 1,
                            "subDivisionCode": "M",
                            "subDivisionName": "WEST BU",
                            "businessUnitOrgAreaCode": 3,
                            "lastUpdatedTimestamp": "2020-06-03",
                            "lastUpdatedUser": "HRM DATA",
                            "storeCode3": "C",
                            "companyCode": "WMW",
                            "taxReportCode": 110,
                            "reportCode": "SC",
                            "deleteCode": "A",
                            "shrinkPctCost": 0,
                            "shrinkRetailPct": 0,
                            "departments": [
                                {
                                    "departmentNbr": 10,
                                    "departmentDesc": "AUTOMOTIVE TEST"
                                }
                            ]
                        }
                    ],
                    "associates": [
                        {
                            "firstName": "JOSEPH",
                            "lastName": " CLAREY",
                            "role": "MGMT-STORE MANAGER",
                            "email": "J0C04I9.S01526.US@WAL-MART.COM",
                            "fullName": "JOSEPH CLAREY"
                        }
                    ],
                    "mainWarehouse": 6009,
                    "lastUpdatedDate": "2020-10-01",
                    "lastUpdatedTimestamp": "2020-09-29"
                }
            },
            "LocationResponse": {
                "description": "This is the base response class for Location which contains 3 things.\n - **data** --- List of complete Location object\n - **success** --- Boolean field indicating if the response was successfully fetched or not\n - **timestamp** --- The timestamp at which the response was generated",
                "type": "object",
                "properties": {
                    "success": {
                        "description": "Boolean field indicating if the response was successfully fetched or not.",
                        "type": "boolean"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "description": "The timestamp at which the response was generated.",
                        "type": "string"
                    },
                    "data": {
                        "description": "List of complete Location object.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        }
                    }
                },
                "example": {
                    "success": true,
                    "timestamp": "2020-10-06 11:22:38",
                    "data": [
                        {
                            "id": "US1526",
                            "locationNbr": 1526,
                            "name": "STORM LAKE IA",
                            "openDate": "1990-04-02",
                            "streetAddress": "1831 LAKE AVE",
                            "city": "STORM LAKE",
                            "stateProvinceCode": "IA",
                            "stateProvinceId": 15,
                            "stateProvince": "IOWA",
                            "postalCode": "50588-7606",
                            "country": "US",
                            "timeZoneId": "America/Chicago",
                            "timeZoneCode": "CDT",
                            "glnNumbers": [
                                "0078742014937"
                            ],
                            "timeZoneDSTObservable": true,
                            "logisticalCountryCode": "US",
                            "type": "Retail",
                            "typeCode": 100001,
                            "statusCode": 5,
                            "status": "OLD, MORE THAN 13 MONTHS SINCE RE-GRAND",
                            "buID": 295634,
                            "tempStoreFlag": false,
                            "languageCode": 101,
                            "bannerCode": "A1",
                            "bannerDesc": "WM Supercenter",
                            "currencyCode": "USD",
                            "replenishmentTypeCode": "U",
                            "phoneNbr": "7127327940",
                            "baseDivisionCode": 1,
                            "homeStoreNbr": 1361,
                            "isSalesCompable": true,
                            "isOpenSunday": true,
                            "merchandiseMajorZoneNbr": 80,
                            "merchandiseSubZoneNbr": 85,
                            "expansionSize": 65930,
                            "grossSize": 157131,
                            "lastUpdatedUser": "RDC_LOAD",
                            "marketName": "RETAIL MARKET 426",
                            "regionName": "NE/ IA/ NE KS",
                            "latitude": 42.663322,
                            "longitude": -95.197507,
                            "formatDescription": "Hypermarket",
                            "divisions": [
                                {
                                    "divisionNbr": 6,
                                    "divisionDesc": "AUTO CARE CENTER",
                                    "typeCode": 1,
                                    "type": "INCOME DIVISION",
                                    "openDate": "2002-09-11",
                                    "statusCode": 1,
                                    "regionCode": 51,
                                    "subRegionCode": 17,
                                    "marketCode": 426,
                                    "baseDivisionCode": 1,
                                    "subDivisionCode": "M",
                                    "subDivisionName": "WEST BU",
                                    "businessUnitOrgAreaCode": 3,
                                    "lastUpdatedTimestamp": "2020-06-03",
                                    "lastUpdatedUser": "HRM DATA",
                                    "storeCode3": "C",
                                    "companyCode": "WMW",
                                    "taxReportCode": 110,
                                    "reportCode": "SC",
                                    "deleteCode": "A",
                                    "shrinkPctCost": 0,
                                    "shrinkRetailPct": 0,
                                    "departments": [
                                        {
                                            "departmentNbr": 10,
                                            "departmentDesc": "AUTOMOTIVE TEST"
                                        }
                                    ]
                                }
                            ],
                            "associates": [
                                {
                                    "firstName": "JOSEPH",
                                    "lastName": " CLAREY",
                                    "role": "MGMT-STORE MANAGER",
                                    "email": "J0C04I9.S01526.US@WAL-MART.COM",
                                    "fullName": "JOSEPH CLAREY"
                                }
                            ],
                            "mainWarehouse": 6009,
                            "lastUpdatedDate": "2020-10-01",
                            "lastUpdatedTimestamp": "2020-09-29"
                        }
                    ]
                }
            },
            "LocationSingleResponse": {
                "description": "This is the base response class for Location which contains 3 things.\n - **data** --- Complete Location object\n - **success** --- Boolean field indicating if the response was successfully fetched or not\n - **timestamp** --- The timestamp at which the response was generated",
                "type": "object",
                "properties": {
                    "success": {
                        "description": "Boolean field indicating if the response was successfully fetched or not.",
                        "type": "boolean"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "description": "The timestamp at which the response was generated.",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Location",
                        "description": "Complete Location object."
                    }
                },
                "example": {
                    "success": true,
                    "timestamp": "2020-10-06 12:53:24",
                    "data": {
                        "id": "US1526",
                        "locationNbr": 1526,
                        "name": "STORM LAKE IA",
                        "openDate": "1990-04-02",
                        "streetAddress": "1831 LAKE AVE",
                        "city": "STORM LAKE",
                        "stateProvinceCode": "IA",
                        "stateProvinceId": 15,
                        "stateProvince": "IOWA",
                        "postalCode": "50588-7606",
                        "country": "US",
                        "timeZoneId": "America/Chicago",
                        "timeZoneCode": "CDT",
                        "glnNumbers": [
                            "0078742014937"
                        ],
                        "timeZoneDSTObservable": true,
                        "logisticalCountryCode": "US",
                        "type": "Retail",
                        "typeCode": 100001,
                        "statusCode": 5,
                        "status": "OLD, MORE THAN 13 MONTHS SINCE RE-GRAND",
                        "buID": 295634,
                        "tempStoreFlag": false,
                        "languageCode": 101,
                        "bannerCode": "A1",
                        "bannerDesc": "WM Supercenter",
                        "currencyCode": "USD",
                        "replenishmentTypeCode": "U",
                        "phoneNbr": "7127327940",
                        "baseDivisionCode": 1,
                        "homeStoreNbr": 1361,
                        "isSalesCompable": true,
                        "isOpenSunday": true,
                        "merchandiseMajorZoneNbr": 80,
                        "merchandiseSubZoneNbr": 85,
                        "expansionSize": 65930,
                        "grossSize": 157131,
                        "lastUpdatedUser": "RDC_LOAD",
                        "marketName": "RETAIL MARKET 426",
                        "regionName": "NE/ IA/ NE KS",
                        "latitude": 42.663322,
                        "longitude": -95.197507,
                        "formatDescription": "Hypermarket",
                        "divisions": [
                            {
                                "divisionNbr": 6,
                                "divisionDesc": "AUTO CARE CENTER",
                                "typeCode": 1,
                                "type": "INCOME DIVISION",
                                "openDate": "2002-09-11",
                                "statusCode": 1,
                                "regionCode": 51,
                                "subRegionCode": 17,
                                "marketCode": 426,
                                "baseDivisionCode": 1,
                                "subDivisionCode": "M",
                                "subDivisionName": "WEST BU",
                                "businessUnitOrgAreaCode": 3,
                                "lastUpdatedTimestamp": "2020-06-03",
                                "lastUpdatedUser": "HRM DATA",
                                "storeCode3": "C",
                                "companyCode": "WMW",
                                "taxReportCode": 110,
                                "reportCode": "SC",
                                "deleteCode": "A",
                                "shrinkPctCost": 0,
                                "shrinkRetailPct": 0,
                                "departments": [
                                    {
                                        "departmentNbr": 10,
                                        "departmentDesc": "AUTOMOTIVE TEST"
                                    }
                                ]
                            }
                        ],
                        "associates": [
                            {
                                "firstName": "JOSEPH",
                                "lastName": " CLAREY",
                                "role": "MGMT-STORE MANAGER",
                                "email": "J0C04I9.S01526.US@WAL-MART.COM",
                                "fullName": "JOSEPH CLAREY"
                            }
                        ],
                        "mainWarehouse": 6009,
                        "lastUpdatedDate": "2020-10-01",
                        "lastUpdatedTimestamp": "2020-09-29"
                    }
                }
            },
            "StoreManagerResponse": {
                "description": "Store manager details.",
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "Store manager first name.",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Store manager last name.",
                        "type": "string"
                    },
                    "role": {
                        "description": "Store manager role.",
                        "type": "string"
                    },
                    "email": {
                        "description": "Store manager email.",
                        "type": "string"
                    },
                    "locationNbr": {
                        "format": "int32",
                        "description": "Store manager location number.",
                        "type": "integer"
                    },
                    "fullName": {
                        "description": "Store manager full name.",
                        "type": "string"
                    }
                },
                "example": {
                    "firstName": "BRAD",
                    "lastName": " SHERWOOD",
                    "role": "MGMT-STORE MANAGER",
                    "email": "B0S01CF.S00998.US@WAL-MART.COM",
                    "locationNbr": 998,
                    "fullName": "BRAD SHERWOOD"
                }
            },
            "SuccessStoreManagerResponse": {
                "description": "This is the base response class for Store manager which contains 3 things.\n - **data** --- List of complete Store manager object\n - **success** --- Boolean field indicating if the response was successfully fetched or not\n - **timestamp** --- The timestamp at which the response was generated",
                "type": "object",
                "properties": {
                    "success": {
                        "description": "Boolean field indicating if the response was successfully fetched or not.",
                        "type": "boolean"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "description": "The timestamp at which the response was generated.",
                        "type": "string"
                    },
                    "data": {
                        "description": "List of complete Store manager object.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreManagerResponse"
                        }
                    }
                },
                "example": {
                    "success": true,
                    "timestamp": "2020-10-06 13:02:13",
                    "data": [
                        {
                            "firstName": "BRAD",
                            "lastName": " SHERWOOD",
                            "role": "MGMT-STORE MANAGER",
                            "email": "B0S01CF.S00998.US@WAL-MART.COM",
                            "locationNbr": 998,
                            "fullName": "BRAD SHERWOOD"
                        }
                    ]
                }
            },
            "StoreManagerRequest": {
                "description": "Store manager creation request payload.",
                "type": "object",
                "properties": {
                    "locationNumber": {
                        "format": "int32",
                        "description": "Location number.",
                        "type": "integer"
                    },
                    "countryCode": {
                        "description": "Standard country code. Example US = USA, CA = Canada.",
                        "type": "string"
                    },
                    "managerRole": {
                        "description": "Manager role.",
                        "type": "string"
                    }
                },
                "example": {
                    "locationNumber": 50,
                    "countryCode": "US",
                    "managerRole": "STOREMANAGER"
                }
            },
            "CenterManagedResponse": {
                "description": "Center managed object.",
                "type": "object",
                "properties": {
                    "totalStores": {
                        "format": "int32",
                        "description": "Total stores.",
                        "type": "integer"
                    },
                    "storeNumberList": {
                        "description": "List of store numbers.",
                        "type": "array",
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "totalStores": 1,
                    "storeNumberList": [
                        1175
                    ]
                }
            },
            "SuccessCenterManagedResponse": {
                "description": "This is the base response class for Center managed which contains 3 things.\n - **data** --- Complete Center managed object\n - **success** --- Boolean field indicating if the response was successfully fetched or not\n - **timestamp** --- The timestamp at which the response was generated",
                "type": "object",
                "properties": {
                    "success": {
                        "description": "Boolean field indicating if the response was successfully fetched or not.",
                        "type": "boolean"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "description": "The timestamp at which the response was generated.",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/CenterManagedResponse",
                        "description": "Complete Center managed object."
                    }
                },
                "example": {
                    "success": true,
                    "timestamp": "2020-10-06 12:31:44",
                    "data": {
                        "totalStores": 1120,
                        "storeNumberList": [
                            1175
                        ]
                    }
                }
            },
            "ErrorResponse": {
                "description": "This is the base error response class for Location domain which contains 3 things.\n - error --- List of errors\n - success --- Boolean field indicating if the response was successfully fetched or not\n - timestamp --- The timestamp at which the response was generated",
                "type": "object",
                "properties": {
                    "success": {
                        "description": "Boolean field indicating if the error response was successfully fetched or not.",
                        "type": "boolean"
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "description": "The timestamp at which the response was generated.",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ErrorModel",
                        "description": "List of errors."
                    }
                },
                "example": {
                    "success": false,
                    "timestamp": "2020-10-06 12:37:32",
                    "error": {
                        "errorCode": 105,
                        "message": "Department number is invalid"
                    }
                }
            },
            "ErrorModel": {
                "description": "Error details object.",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "format": "int32",
                        "description": "Error code.",
                        "type": "integer"
                    },
                    "message": {
                        "description": "Error message summary.",
                        "type": "string"
                    },
                    "details": {
                        "description": "Detailed error description.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "errorCode": 105,
                    "message": "Department number is invalid"
                }
            }
        }
    },
    "tags": [
        {
            "name": "location-controller",
            "description": "Location Controller"
        }
    ]
}